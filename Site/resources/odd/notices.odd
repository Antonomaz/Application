<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en"><teiHeader><fileDesc>
            <titleStmt><title>Notices</title><title type="short">Notices</title></titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc><encodingDesc><tagsDecl/></encodingDesc><revisionDesc>
            <change when="2022-07-19+02:00">Initial version</change>
        </revisionDesc></teiHeader><text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="odd_test" source="teipublisher.odd"> <elementSpec ident="bibl" mode="change"><model behaviour="listItem"/><model predicate="parent::listBibl" behaviour="listItem"/><model behaviour="inline"/></elementSpec>
                <elementSpec ident="head" mode="change"><model predicate="@type='main'" behaviour="heading">
            <param name="level" value="1"/>
        </model><model predicate="@type='sub'" behaviour="heading">
            <param name="level" value="2"/>
            <outputRendition xml:space="preserve">
            
            
            
            
            
            
            
            
            
            
            
            
            text-indent: 5mm;
font-style: italic;
color: #696969;
            
            
            
            
            
            
            
            
            
            
            
            
            </outputRendition>
        </model><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model><model predicate="parent::figure" behaviour="inline">
            <param name="content" value="."/>
            <param name="lien" value="preceding-sibling::graphic/@url"/>
            <pb:template xmlns="" xml:space="preserve"><p>[[content]] <br/> <small><a href="[[lien]]">[Source]</a></small></p></pb:template>
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model><model predicate="parent::div" behaviour="heading">
            <param name="level" value="count(ancestor::div)"/>
        </model></elementSpec>
                <elementSpec ident="body" mode="change"/>
                <elementSpec ident="p" mode="change"/>
                <elementSpec ident="graphic" mode="change"><model output="web" predicate="parent::figure" behaviour="graphic" cssClass="center-block">
            <param name="url" value="@url"/>
            <outputRendition xml:space="preserve">
            
            
            display: block;
max-width:400px;
max-height:400px;
width: auto;
height: auto;
margin-right: auto;
margin-left: auto;
            
            
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="name" mode="change"/>
                <elementSpec ident="figure" mode="change"><model predicate="not(./head/text())" behaviour="omit"/><model output="web" behaviour="graphic">
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model><model predicate="head or @rendition='simple:display'" behaviour="block"/><model behaviour="inline"/></elementSpec>
                <elementSpec ident="teiHeader" mode="change"><model output="web" predicate="$parameters?header='short'" behaviour="block"/><model behaviour="block">
            <param name="author" value=".//editionStmt/respStmt/name"/>
            <pb:template xmlns="" xml:space="preserve"><p>Notice rédigée par [[author]].</p></pb:template>
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
        </model><model output="latex" behaviour="metadata"/><model output="fo" behaviour="omit"/><model output="web" behaviour="metadata"/></elementSpec>
                <elementSpec ident="title" mode="change"><model predicate="parent::head" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model><modelSequence predicate="parent::bibl and text()">
            <model predicate="not(@level=&#34;a&#34;)" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">[[content]], </pb:template>
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="@level=&#34;a&#34;" behaviour="inline">
                <pb:template xmlns="" xml:space="preserve">[[content]], </pb:template>
            </model>
        </modelSequence><model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="3"/>
            <outputRendition xml:space="preserve">
            font-size: 20px;
            </outputRendition>
        </model><modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' — '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence><model predicate="not(@level) and parent::bibl" behaviour="inline"/><modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence><modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline"/>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence><model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model></elementSpec>
                <elementSpec ident="titleStmt" mode="change"><model output="latex" behaviour="meta">
            <param name="content" value="."/>
        </model><model output="fo" behaviour="heading"/><model predicate="$parameters?mode='title'" behaviour="heading">
            <param name="content" value="title[not(@type)]"/>
            <param name="level" value="5"/>
        </model><modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[1]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author"/>
            </model>
        </modelSequence><model output="web" behaviour="block"/></elementSpec>
                <elementSpec ident="div" mode="change"><model predicate="@type=&#34;biblio_primaire&#34;" behaviour="list">
            <pb:template xmlns="" xml:space="preserve"><h3>Bibliographie primaire</h3>
<ul>[[content]]</ul>
<br/></pb:template>
        </model><model predicate="@type='biblio_secondaire'" behaviour="list">
            <param name="content" value="."/>
            <param name="auteur" value="./ancestor::TEI/teiHeader//editionStmt/respStmt"/>
            <pb:template xmlns="" xml:space="preserve"><h3>Bibliographie secondaire</h3>
<ul>[[content]]</ul>
<br/>
<p>[[auteur]]</p></pb:template>
        </model><model predicate="@type='title_page'" behaviour="block">
            <outputRendition xml:space="preserve">
            border: 1px solid black; padding: 5px;
            </outputRendition>
        </model><model predicate="parent::body or parent::front or parent::back" behaviour="section"/><model behaviour="block"/></elementSpec>
                <elementSpec ident="list" mode="change"><modelSequence predicate="@type=&#34;mazarinades&#34; or @type=&#34;notices&#34; and text()">
            <model predicate="@type='mazarinades'" behaviour="list">
                <param name="content" value="."/>
                <pb:template xmlns="" xml:space="preserve"><h3>Mazarinades en lien avec ce sujet :</h3>
<ul>[[content]]</ul></pb:template>
            </model>
            <model predicate="@type='notices'" behaviour="list">
                <param name="content" value="."/>
                <pb:template xmlns="" xml:space="preserve"><h3>Notices en lien avec ce sujet :</h3>
<ul>[[content]]</ul></pb:template>
            </model>
        </modelSequence><model predicate="@rendition" behaviour="list" useSourceRendition="true">
            <param name="content" value="item"/>
        </model><model predicate="not(@rendition)" behaviour="list">
            <param name="content" value="item"/>
        </model></elementSpec>
                <elementSpec ident="item" mode="change"><modelSequence predicate="parent::list[@type]">
            <model predicate="parent::list[@type=&#34;mazarinades&#34;]" behaviour="listItem"/>
            <model predicate="parent::list[@type=&#34;notices&#34;]" behaviour="listItem">
                <param name="categorie" value="if (./ref/@type=&#34;forme_livre&#34;) then &#34;forme-livre&#34; else ./ref/@type "/>
                <param name="notice" value="./ref/@target"/>
            </model>
        </modelSequence><model behaviour="listItem"/></elementSpec>
            <elementSpec ident="ref" mode="change"><model predicate="ancestor::list[@type=&#34;notices&#34;]" behaviour="inline">
            <param name="categorie" value="if (./@type=&#34;forme_livre&#34;) then &#34;forme-livre&#34; else ./@type"/>
            <param name="notice" value="./@target"/>
            <pb:template xmlns="" xml:space="preserve"><a target="_blank" href="/exist/apps/Antonomaz/notices/[[categorie]]/[[notice]]">[[content]]</a></pb:template>
        </model><model predicate="starts-with(@target, 'http')" behaviour="link">
            <param name="uri" value="@target"/>
            <param name="target" value="&#34;_blank&#34;"/>
            <pb:template xmlns="" xml:space="preserve">[[content]]</pb:template>
        </model><model predicate="not(node()) and parent::p or parent::item" behaviour="link">
            <param name="content" value="./text()"/>
            <param name="uri" value="concat(&#34;/exist/apps/Antonomaz/corpus/&#34;, @target)"/>
            <param name="target" value="&#34;_blank&#34;"/>
        </model><model predicate="not(@target)" behaviour="inline"/><model behaviour="link">
            <param name="content" value="./text()"/>
            <param name="uri" value="concat(&#34;/exist/apps/Antonomaz/corpus/&#34;, @target)"/>
        </model></elementSpec><elementSpec ident="fileDesc" mode="change"><modelSequence predicate="$parameters?header='short'">
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="titleStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="editionStmt"/>
            </model>
            <model behaviour="block" cssClass="header-short">
                <param name="content" value="publicationStmt"/>
            </model>
        </modelSequence><model behaviour="title">
            <param name="content" value="titleStmt"/>
        </model></elementSpec><elementSpec ident="date" mode="change"><model predicate="parent::bibl and text()" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">[[content]].</pb:template>
        </model><model predicate="$parameters?header='short'" behaviour="omit"/><model output="web" predicate="text()" behaviour="inline"/><model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model><model predicate="text()" behaviour="inline"/></elementSpec><elementSpec ident="edition" mode="change"><model predicate="ancestor::teiHeader" behaviour="block">
            <outputRendition xml:space="preserve" scope="before">
            content: 'Edition: ';
            </outputRendition>
        </model></elementSpec><elementSpec ident="author" mode="change"><model predicate="parent::bibl" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">[[content]], </pb:template>
        </model><model predicate="ancestor::teiHeader" behaviour="block">
            <outputRendition xml:space="preserve" scope="before">
            content: 'By ';
            </outputRendition>
        </model><model behaviour="inline"/></elementSpec><elementSpec ident="pubPlace" mode="change"><model predicate="parent::bibl and text()" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">[[content]], </pb:template>
        </model><model predicate="ancestor::teiHeader" behaviour="omit">
            <desc>Omit if located in teiHeader. </desc>
        </model></elementSpec><elementSpec ident="publisher" mode="change"><model predicate="parent::bibl and text()" behaviour="inline">
            <pb:template xmlns="" xml:space="preserve">[[content]], </pb:template>
        </model><model predicate="ancestor::teiHeader" behaviour="omit">
            <desc>Omit if located in teiHeader. </desc>
        </model></elementSpec><elementSpec ident="idno" mode="add"><model predicate="parent::bibl" behaviour="omit"/></elementSpec><elementSpec ident="ptr" mode="change"><model predicate="parent::bibl" behaviour="link">
            <param name="uri" value="@target"/>
            <pb:template xmlns="" xml:space="preserve">[En ligne.]</pb:template>
        </model><model predicate="parent::notatedMusic" behaviour="pass-through">
            <param name="url" value="@target"/>
            <pb:template xmlns="" xml:space="preserve"><pb-mei url="[[url]]" player="player">
  <pb-option name="appXPath" on="./rdg[contains(@label, 'original')]" off="">Original Clefs</pb-option>
</pb-mei></pb:template>
        </model></elementSpec><elementSpec ident="availability" mode="add"><model behaviour="omit"/></elementSpec><elementSpec ident="publicationStmt" mode="change"><model output="web" behaviour="block"/><model behaviour="omit"/></elementSpec><elementSpec ident="respStmt" mode="add"><model predicate="$parameters?header='short'" behaviour="inline">
            <param name="resp" value="./resp"/>
            <param name="name" value="./name"/>
            <pb:template xmlns="" xml:space="preserve">[[resp]] : [[name]]</pb:template>
        </model><model behaviour="inline">
            <param name="author" value="./name"/>
            <pb:template xmlns="" xml:space="preserve"><p style="text-align: right; font-style: italic;">Notice rédigée par [[author]].</p></pb:template>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model></elementSpec></schemaSpec>
        </body>
    </text></TEI>